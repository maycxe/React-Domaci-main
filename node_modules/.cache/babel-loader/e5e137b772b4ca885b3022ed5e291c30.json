{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majar\\\\Maja\\\\deFONsito\\\\iteh\\\\React\\\\React-Domaci-main\\\\src\\\\FormBMI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './components/Button';\nimport TextBox from './components/TextBox';\nimport './FormBMI.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormBMI() {\n  _s();\n\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [bmiResult, setBmiResult] = useState(null);\n  const [status, setStatus] = useState(\"\");\n\n  function calculateBMI(e) {\n    e.preventDefault();\n    let bmi = Number(weight / (height / 100) ** 2).toFixed(2);\n    setBmiResult(bmi);\n    let bmiStatus = getStatus(bmi);\n    setStatus(bmiStatus);\n  }\n\n  function getStatus(bmi) {\n    if (bmi < 18.5) return \"Underweight\";else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";else if (bmi >= 25 && bmi < 29.9) return \"Overweight\";else return \"Obese\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-content-right-bmi\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter your details below and find out your Body Mass Index and BMI category!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"height\",\n          className: \"form-label\",\n          children: \"Height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n          id: \"height\",\n          type: \"text\",\n          name: \"height\",\n          placeholder: \"Height in cm\",\n          value: height,\n          onChange: e => setHeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"weight\",\n          className: \"form-label\",\n          children: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n          id: \"weight\",\n          type: \"text\",\n          name: \"weight\",\n          placeholder: \"Weight in kg\",\n          value: weight,\n          onChange: e => setWeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"form-input-btn-bmi\",\n        text: \"Calculate\",\n        onClick: e => calculateBMI(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form-input-bmi\",\n        children: \"Note: resulting values shouldn't be taken too seriously. For more accurate results, go and see a doctor!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), bmiResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-input-bmi\",\n          children: [\"Your BMI is: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: bmiResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 58\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-input-bmi\",\n          children: [\"You are currently: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormBMI, \"7weBQclokWiI8Mdtgn8pVv7zZXU=\");\n\n_c = FormBMI;\nexport default FormBMI;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormBMI\");","map":{"version":3,"sources":["C:/Users/majar/Maja/deFONsito/iteh/React/React-Domaci-main/src/FormBMI.js"],"names":["React","useState","Button","TextBox","FormBMI","height","setHeight","weight","setWeight","bmiResult","setBmiResult","status","setStatus","calculateBMI","e","preventDefault","bmi","Number","toFixed","bmiStatus","getStatus","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Button from './components/Button';\nimport TextBox from './components/TextBox';\nimport './FormBMI.css';\n\nfunction FormBMI() {\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n\n  const [bmiResult, setBmiResult] = useState(null);\n\n  const [status, setStatus] = useState(\"\");\n\n  function calculateBMI(e) {\n    e.preventDefault();\n    let bmi = Number(weight / (height / 100) ** 2).toFixed(2);\n    setBmiResult(bmi);\n\n    let bmiStatus = getStatus(bmi);\n\n    setStatus(bmiStatus);\n\n  }\n\n  function getStatus(bmi) {\n    if (bmi < 18.5) return \"Underweight\";\n    else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";\n    else if (bmi >= 25 && bmi < 29.9) return \"Overweight\";\n    else return \"Obese\";\n  }\n\n  return (\n    <div className=\"form-content-right-bmi\">\n      <form className=\"form\">\n          <h1>\n              Enter your details below and find out your Body Mass Index and BMI category!\n          </h1>\n          <div className=\"form-inputs\">\n              <label htmlFor=\"height\" className=\"form-label\">\n                  Height\n              </label>\n              <TextBox \n                  id=\"height\" \n                  type=\"text\" \n                  name=\"height\" \n                  placeholder=\"Height in cm\" \n                  value={height} \n                  onChange={(e) => setHeight(e.target.value)}\n              />\n          </div>\n          <div className=\"form-inputs\">\n              <label htmlFor=\"weight\" className=\"form-label\">\n                  Weight\n              </label>\n              <TextBox \n                  id=\"weight\" \n                  type=\"text\" \n                  name=\"weight\" \n                  placeholder=\"Weight in kg\" \n                  value={weight} \n                  onChange={(e) => setWeight(e.target.value)}\n              />\n          </div>\n          <Button className=\"form-input-btn-bmi\" text=\"Calculate\" onClick={(e) => calculateBMI(e)}/>\n          <span className=\"form-input-bmi\">\n              Note: resulting values shouldn't be taken too seriously. For more accurate results, go and see a doctor!\n          </span>\n          \n          {bmiResult && (\n            <div className=\"mt-4\">\n              <p className=\"form-input-bmi\">Your BMI is: <b>{bmiResult}</b> </p>\n              <p className=\"form-input-bmi\">You are currently: <b>{status}</b></p>\n            </div>\n          )}\n      </form>\n        \n    </div>\n  );\n}\n\nexport default FormBMI\n"]},"metadata":{},"sourceType":"module"}